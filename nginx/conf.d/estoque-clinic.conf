# ==================================================
# ESTOQUE CLINIC - VIRTUAL HOST PRINCIPAL
# Configuração SSL/TLS e proxy reverso
# ==================================================

# ==========================================
# REDIRECT HTTP -> HTTPS
# ==========================================
server {
    listen 80;
    listen [::]:80;
    server_name estoqueclinic.com www.estoqueclinic.com app.estoqueclinic.com api.estoqueclinic.com;
    
    # Permitir apenas Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
    
    # Redirect todo o resto para HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ==========================================
# FRONTEND PRINCIPAL (HTTPS)
# ==========================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name estoqueclinic.com www.estoqueclinic.com app.estoqueclinic.com;
    
    # ==========================================
    # SSL CONFIGURATION
    # ==========================================
    
    ssl_certificate /etc/nginx/certs/estoqueclinic.com.crt;
    ssl_certificate_key /etc/nginx/certs/estoqueclinic.com.key;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # ==========================================
    # LOGS
    # ==========================================
    
    access_log /var/log/nginx/estoque-clinic-access.log main;
    error_log /var/log/nginx/estoque-clinic-error.log warn;
    
    # ==========================================
    # RATE LIMITING
    # ==========================================
    
    limit_req zone=general burst=50 nodelay;
    limit_conn conn_limit_per_ip 50;
    
    # ==========================================
    # HEADERS DE SEGURANÇA
    # ==========================================
    
    # CSP específico para EstoqueClinic
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net;
        font-src 'self' https://fonts.gstatic.com data:;
        img-src 'self' data: https: blob:;
        connect-src 'self' https://api.estoqueclinic.com wss://api.estoqueclinic.com;
        media-src 'self';
        object-src 'none';
        child-src 'none';
        frame-src 'none';
        worker-src 'self' blob:;
        manifest-src 'self';
        base-uri 'self';
        form-action 'self';
        frame-ancestors 'none';
        upgrade-insecure-requests;
    " always;
    
    # ==========================================
    # FRONTEND ANGULAR
    # ==========================================
    
    # Servir aplicação Angular
    location / {
        proxy_pass http://estoque_frontend;
        
        # Headers para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Cache para assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://estoque_frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
    }
    
    # ==========================================
    # API BACKEND
    # ==========================================
    
    # Proxy para API
    location /api/ {
        # Rate limiting mais restritivo para API
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://estoque_backend;
        
        # Headers necessários
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Configurações de proxy
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering on;
        proxy_cache estoque_cache;
        proxy_cache_valid 200 302 1m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        
        # Headers de cache
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Authentication endpoints (rate limiting especial)
    location /auth/ {
        limit_req zone=auth burst=5 nodelay;
        
        proxy_pass http://estoque_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Não fazer cache de autenticação
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Health checks
    location /health {
        proxy_pass http://estoque_backend;
        access_log off;
        
        # Cache health checks
        proxy_cache estoque_cache;
        proxy_cache_valid 200 30s;
    }
    
    # ==========================================
    # UPLOADS E ARQUIVOS
    # ==========================================
    
    location /uploads/ {
        limit_req zone=uploads burst=3 nodelay;
        
        proxy_pass http://estoque_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configurações para uploads
        client_max_body_size 10m;
        proxy_request_buffering off;
    }
    
    # ==========================================
    # WEBSOCKETS (FUTURO)
    # ==========================================
    
    location /ws/ {
        proxy_pass http://estoque_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts para WebSocket
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # ==========================================
    # SEGURANÇA
    # ==========================================
    
    # Bloquear acesso a arquivos sensíveis
    location ~ /\.(ht|env|git|svn|user\.ini) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear user agents maliciosos
    if ($http_user_agent ~* "(bot|crawler|spider|scraper|scanner)" ) {
        return 403;
    }
    
    # Bloquear IPs suspeitos (exemplo)
    # include /etc/nginx/conf.d/blocked-ips.conf;
    
    # ==========================================
    # MONITORAMENTO
    # ==========================================
    
    # Nginx status (acesso restrito)
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16;
        allow 172.21.0.0/16;
        deny all;
    }
    
    # ==========================================
    # ERROR HANDLING
    # ==========================================
    
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        return 404 '{"error":"Not Found","code":404,"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    location = /50x.html {
        internal;
        return 500 '{"error":"Internal Server Error","code":500,"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
}