# ==================================================
# ESTOQUE CLINIC - NGINX VIRTUAL HOST
# Configuração do servidor para Angular SPA
# ==================================================

server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # ==========================================
    # LOGS
    # ==========================================
    
    access_log /var/log/nginx/estoque-clinic-access.log main;
    error_log /var/log/nginx/estoque-clinic-error.log warn;
    
    # ==========================================
    # RATE LIMITING
    # ==========================================
    
    limit_req zone=frontend burst=20 nodelay;
    limit_conn conn_limit_per_ip 20;
    
    # ==========================================
    # HEADERS DE SEGURANÇA
    # ==========================================
    
    # Content Security Policy para Angular
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval';
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
        font-src 'self' https://fonts.gstatic.com data:;
        img-src 'self' data: https:;
        connect-src 'self' http://localhost:3001 https://api.estoqueclinic.com;
        object-src 'none';
        base-uri 'self';
        form-action 'self';
        frame-ancestors 'none';
        upgrade-insecure-requests;
    " always;
    
    # ==========================================
    # ANGULAR SPA CONFIGURATION
    # ==========================================
    
    # Servir index.html para todas as rotas (Angular Router)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # ==========================================
    # ASSETS ESTÁTICOS
    # ==========================================
    
    # JavaScript e CSS com cache agressivo
    location ~* \.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Compressão específica
        gzip_static on;
        
        # CORS para assets
        add_header Access-Control-Allow-Origin "*";
    }
    
    # Imagens e fontes
    location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Compressão para SVG
        location ~* \.svg$ {
            gzip_static on;
            add_header Content-Type image/svg+xml;
        }
    }
    
    # Manifests e service workers
    location ~* \.(manifest|webmanifest|sw\.js)$ {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # ==========================================
    # API PROXY (DESENVOLVIMENTO)
    # ==========================================
    
    # Proxy para API backend (apenas desenvolvimento)
    location /api/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Proxy para auth
    location /auth/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # ==========================================
    # MONITORAMENTO
    # ==========================================
    
    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Nginx status (apenas interno)
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16;
        allow 172.21.0.0/16;
        deny all;
    }
    
    # ==========================================
    # SEGURANÇA
    # ==========================================
    
    # Bloquear acesso a arquivos sensíveis
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear arquivos de configuração
    location ~ /.*\.(conf|config|env|yml|yaml)$ {
        deny all;
        access_log off;
    }
    
    # ==========================================
    # ERROR PAGES
    # ==========================================
    
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}